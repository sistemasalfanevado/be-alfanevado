name: Build and deploy Node.js app to Azure Web App - be-alfanevado

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build project
        run: npm run build

      - name: Create .env file for build
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL_PROD }}" > .env
          echo "Archivo .env creado con éxito."

      - name: Validate .env file
        run: cat .env

      # Incluir solo los archivos necesarios para producción
      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r dist package.json package-lock.json prisma deployment/
          cp .env deployment/
          cd deployment && npm ci --only=production

      - name: Zip artifact for deployment
        run: cd deployment && zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .

      - name: Unzip artifact for deployment
        run: unzip release.zip -d deployment-files

      # Agregar delay para evitar conflicto con SCM
      - name: Wait before deployment
        run: sleep 45s

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'be-alfanevado'
          slot-name: 'Production'
          package: deployment-files
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DBA683BB3DAF41749D5C4548B9A609AC }}

      # Las migraciones se ejecutarán automáticamente después del deploy
      - name: Wait for app to be ready
        run: sleep 30s

      - name: Check application health
        run: |
          curl -f https://be-alfanevado.azurewebsites.net/health || echo "App is starting..."