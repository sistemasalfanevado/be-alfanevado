name: Build and deploy Node.js app to Azure Web App - be-alfanevado

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          echo "=== Verificación del build ==="
          echo "Contenido de dist/:"
          ls -la dist/
          echo "¿Existe main.js?"
          [ -f dist/main.js ] && echo "✅ SÍ - Build exitoso" || echo "❌ NO - Build falló"
          echo "Tamaño de dist/:"
          du -sh dist/

      # Crear package SIN node_modules - Azure los instalará automáticamente
      - name: Create deployment package
        run: |
          mkdir -p deployment
          
          # Copiar solo lo esencial
          cp -r dist/ deployment/
          cp -r prisma/ deployment/
          cp package.json package-lock.json deployment/
          cp tsconfig.json deployment/
          cp nest-cli.json deployment/ 2>/dev/null || echo "nest-cli.json no encontrado"
          
          # Crear archivo de configuración para Azure
          echo "SCM_DO_BUILD_DURING_DEPLOYMENT=true" > deployment/.env
          
          echo "=== Estructura del deployment ==="
          ls -la deployment/
          echo "=== Contenido de dist/ ==="
          ls -la deployment/dist/

      - name: Zip artifact for deployment
        run: cd deployment && zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .

      - name: Unzip artifact for deployment
        run: unzip release.zip -d deployment-files

      - name: Verify deployment contents
        run: |
          echo "=== Verificación final ==="
          echo "Archivos en deployment-files:"
          ls -la deployment-files/
          echo "¿dist/main.js existe?" && [ -f deployment-files/dist/main.js ] && echo "✅ SÍ" || echo "❌ NO"
          echo "¿package.json existe?" && [ -f deployment-files/package.json ] && echo "✅ SÍ" || echo "❌ NO"
          echo "¿prisma/schema.prisma existe?" && [ -f deployment-files/prisma/schema.prisma ] && echo "✅ SÍ" || echo "❌ NO"

      - name: Wait before deployment
        run: sleep 30s

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'be-alfanevado'
          slot-name: 'Production'
          package: deployment-files
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DBA683BB3DAF41749D5C4548B9A609AC }

      - name: Wait for app to be ready
        run: |
          echo "Esperando que la aplicación se inicie..."
          sleep 90
          echo "Verificando estado de la aplicación..."
          curl -f https://be-alfanevado.azurewebsites.net/ || \
          curl -f https://be-alfanevado.azurewebsites.net/health || \
          echo "La aplicación puede estar iniciándose..."